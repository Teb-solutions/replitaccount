<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.webServer>
    <!-- indicates that the server.cjs file is a node.js application -->
    <handlers>
      <add name="iisnode" path="server.cjs" verb="*" modules="iisnode" />
    </handlers>

    <rewrite>
      <rules>
        <!-- First we consider whether the incoming URL matches a physical file in the /dist folder -->
        <rule name="StaticContent">
          <action type="Rewrite" url="dist{REQUEST_URI}" />
        </rule>

        <!-- All other URLs are mapped to the Node.js application entry point -->
        <rule name="DynamicContent">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True" />
          </conditions>
          <action type="Rewrite" url="server.cjs" />
        </rule>
      </rules>
    </rewrite>

    <!-- Configure iisnode for Node.js applications -->
    <iisnode 
      node_env="production"
      nodeProcessCommandLine="C:\Program Files\nodejs\node.exe"
      interceptor="&quot;%programfiles%\iisnode\interceptor.js&quot;"
    />

    <!-- Security headers -->
    <httpProtocol>
      <customHeaders>
        <add name="X-Content-Type-Options" value="nosniff" />
        <add name="X-Frame-Options" value="DENY" />
        <add name="X-XSS-Protection" value="1; mode=block" />
      </customHeaders>
    </httpProtocol>

    <!-- Configure static content -->
    <staticContent>
      <mimeMap fileExtension=".json" mimeType="application/json" />
      <mimeMap fileExtension=".js" mimeType="application/javascript" />
      <mimeMap fileExtension=".css" mimeType="text/css" />
    </staticContent>

    <!-- Error handling -->
    <httpErrors existingResponse="PassThrough" />
  </system.webServer>
</configuration>